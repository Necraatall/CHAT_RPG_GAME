version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_rpg_game
    ports:
      - "${APP_PORT}:8081"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ${APP_VOLUME}:/app
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ${GRAFANA_VOLUME}:/etc/grafana/provisioning/datasources

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "${PROMETHEUS_PORT}:9090"
    restart: unless-stopped
    volumes:
      - ${PROMETHEUS_CONFIG_VOLUME}:/etc/prometheus
      - prom_data:/prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "${NODE_EXPORTER_PORT}:9100"
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_TCP_PORT}:9300"
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    volumes:
      - ${LOGSTASH_CONFIG_VOLUME}:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "${LOGSTASH_TCP_PORT}:5000"
      - "${LOGSTASH_HTTP_PORT}:9600"
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_HOST}
    ports:
      - "${KIBANA_PORT}:5601"

volumes:
  prom_data:
  esdata:
